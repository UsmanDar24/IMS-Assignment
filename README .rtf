{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue233;\red0\green0\blue0;\red255\green255\blue255;
\red251\green2\blue7;\red0\green0\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c93333;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;
\cssrgb\c100000\c14913\c0;\cssrgb\c1680\c19835\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 In order to replicate these experiments using the resources provided follow these steps:\
\
1. Download/Install the prerequisites:\
\
-Ffmpeg: {\field{\*\fldinst{HYPERLINK "https://www.ffmpeg.org/download.html"}}{\fldrslt 
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 https://www.ffmpeg.org/download.html}}
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \

\f0 \cf3 \ulnone -MP4Box via GPAC: {\field{\*\fldinst{HYPERLINK "https://gpac.wp.imt.fr/downloads/gpac-nightly-builds/"}}{\fldrslt 
\f1 \cf2 \ul https://gpac.wp.imt.fr/downloads/gpac-nightly-builds/}}
\f1 \cf2 \ul \

\f0 \cf3 \ulnone -Shaka player library: 
\f1 https://github.com/google/shaka-player\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf3 2. Run the provided shell script by replacing the desired inputs and outputs of your choice or even add more encoded variations to create the bitrate ladder.\
\
\
\
3. Run the following command on your encoded videos in order to create the manifest file as well as segments:\
\
\
\
\pard\pardeftab720\qc\partightenfactor0
\cf3 \cb4 MP4Box -dash \cf5 4000\cf3  -frag \cf5 4000\cf3  -rap -segment-name segment_ \cf6 output_2400k.mp4\
\
\cf3 \cb1  
\f1 \
\pard\pardeftab720\partightenfactor0
\cf3 \

\f0 Replace the red numbers with your preferred segment size in milliseconds and the blue file name with your file(s) that you are creating a manifest for.\
\
\
\
4. Upload your manifest files, segments and encoded videos to a cloud service that supports DASH such as Google cloud, AWS or wowza.\
\
\
\
5. Obtain the link to your manifest file and paste it into line 6 of myapp.js file in the quotation marks under the \'91manifestUri\'92 variable.\
\
\
\
6. Configure the streaming parameters in lines 37-39 of the myapp.js file and configure the statistics you would like to see in the chrome developers\'92 tools console.\
\
\
\
7. Launch the player.html file with chrome and open the developer\'92s tools and go to console\
\
\
\
8. Click on \'91selected context only\'92 and then return to the console\
\
\
\
9.Right click and save the displayed console logs as a text file\
\
\
\
10. Parse the text file using excel, python, Matlab or any other tool and analyse your statistics.\
\
\
\
11. Repeat steps 7 to 9 under various network conditions (throttling) by using throttling feature under chromes\'92 network tab in the developers\'92 tools. }